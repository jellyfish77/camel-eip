<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file 
	distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under 
	the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may 
	obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to 
	in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF 
	ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under 
	the License. -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="jms" class="org.apache.camel.component.jms.JmsComponent">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="vm://localhost" />
			</bean>
		</property>
	</bean>

	<bean id="downloadLogger" class="loggers.DownloadLogger" />

	<bean id="messageLogger" class="loggers.MessageLogger" />

	<!-- <bean id="uri" class="webservices.UniversalResourceIdentifier" /> -->

	<!-- <bean id="movieCsvToXMLProcessor" class="movies.MovieCsvToXMLProcessor" /> -->

	<bean id="escapeCharsBean" class="movies.EscapeSpecialCharsBean" />

	<bean id="movieCsvToXmlConverter" class="movies.MovieCsvToXmlConverter" />

	<bean id="omdbDynamicRouter" class="movies.OmdbDynamicRouterBean" />

	<bean id="omdbService" class="movies.OmdbServiceBean" />

	<bean id="properties" class="org.apache.camel.component.properties.PropertiesComponent">
		<property name="location" value="classpath:META-INF/spring/camel-config.properties" />
	</bean>

	<bean id="movieAggregationStrategy" class="movies.MovieAggregationStrategy" />

	<!-- <bean id="uri" class="webservices.UniversalResourceIdentifer" /> -->

	<camelContext xmlns="http://camel.apache.org/schema/spring" useMDCLogging="true" trace="false">

		<route id="inputCsvFileRoute">
			<from uri="file:src/data/input?maxMessagesPerPoll=1" />
			<to uri="jms:movieCsvFile" />
			<log message="Inbound CSV file '${header.CamelFileName}' sent to queue" loggingLevel="INFO" marker="CSVComplete" />
		</route>

		<route id="splitCsvFileRoute">
			<from uri="jms:movieCsvFile" />
			<process ref="messageLogger" id="Log Inbound CSV File" />
			<!-- streaming allows processing of one line at a time, but the CamelSplitSize is not available until the last line -->
			<split streaming="false">
				<tokenize token="\n" />
				<filter>
					<!-- Only allow from second line onwards (ignore CSV header) -->
					<simple>${property.CamelSplitIndex} > 0</simple>
					<setHeader headerName="CsvSize">
						<simple>${property.CamelSplitSize}</simple>
					</setHeader>
					<setHeader headerName="CsvIndex">
						<simple>${property.CamelSplitIndex}</simple>
					</setHeader>
					<!-- Do not route empty lines (contain only \n) -->
					<choice>
						<when>
							<simple>${body.length} > 1</simple>
							<to uri="jms:movieCsvLine" />
						</when>
						<otherwise>
							<log message="CSV line is null or empty, no further route" />
						</otherwise>
					</choice>
				</filter>
			</split>
			<!-- <log message="CSV file split complete" loggingLevel="INFO" /> -->
		</route>

		<route id="convertCsvToXmlRoute">
			<from uri="jms:movieCsvLine" />
			<process ref="messageLogger" id="Log Split CSV Row" />
			<bean ref="movieCsvToXmlConverter" method="convertCsvToXml" />
			<to uri="jms:movieXmlRow" />
		</route>

		<route id="enrichRoute">
			<from uri="jms:movieXmlRow" />
			<process ref="messageLogger" id="Log Converted XML Row" />
			<setHeader headerName="MovieTitle">
				<xpath resultType="java.lang.String">/Movie/Title/text()</xpath>
			</setHeader>
			<setHeader headerName="OmdbUrl">
				<simple>{{omdbUrl}}</simple>
			</setHeader>
			<setHeader headerName="OmdbKey">
				<simple>{{omdbKey}}</simple>
			</setHeader>
			<bean ref="omdbService" method="enrichMovie(*, *, *)" />
			<to uri="direct:enrichedMovieXmlRow" />
		</route>

		<route id="validateXmlRoute">
			<from uri="direct:enrichedMovieXmlRow" />
			<process ref="messageLogger" id="Log Enriched XML Row" />
			<doTry>
				<to uri="validator:file:src/main/resources/XSD/MovieCMM.xsd" />
				<to uri="direct:validatedMovieXmlRow" />
				<doCatch>
					<exception>org.apache.camel.ValidationException</exception>
					<to uri="jms:validateXmlDeadLetter" />
				</doCatch>
			</doTry>
		</route>

		<route>
			<from uri="direct:validatedMovieXmlRow" />
			<process ref="messageLogger" id="Log Validated XML Row" />
			<multicast>
				<to uri="direct:validatedMovieAggregator" />
				<to uri="direct:validatedMovieLanguageRouter" />
			</multicast>
		</route>

		<route id="aggregationRoute">
			<from uri="direct:validatedMovieAggregator" />
			<aggregate strategyRef="movieAggregationStrategy" completionInterval="60000" eagerCheckCompletion="true">
				<correlationExpression>
					<header>CamelFileName</header>
				</correlationExpression>
				<bean ref="movieCsvToXmlConverter" method="addRootNode" />
				<to uri="direct:aggregatedMessage" />
			</aggregate>			
		</route>

		<route id="psvTransformRoute">
			<from uri="direct:aggregatedMessage" />
			<process ref="messageLogger" id="Log Aggregated Movies" />
			<to uri="xslt:file:src/main/resources/XSLT/MovieToPsv.xslt" />
			<to uri="jms:psvFile" />
			<log message="XSLT transform to PSV complete" loggingLevel="INFO" />		
		</route>
		
		<route id="psvFileOutputRoute">
			<from uri="jms:psvFile" />
			<process ref="messageLogger" id="Log Transformed PSV File" />
			<to uri="file:src/data/output?fileName=${file:name.noext}.psv"/>
		</route>	

		<route id="languageRoute">
			<from uri="direct:validatedMovieLanguageRouter" />
			<choice>
				<when>
					<xpath>//Format/Language/text()='English'</xpath>
					<to uri="jms:englishMovies" />
				</when>
				<otherwise>
					<!-- <log message="CSV line is null or empty, no further route" /> -->
					<to uri="jms:foreignMovies" />
				</otherwise>
			</choice>
		</route>

		<route id="englishRoute">
			<from uri="jms:englishMovies" />
			<process ref="messageLogger" id="Log English Movie" />
		</route>

		<route id="foreignRoute">
			<from uri="jms:foreignMovies" />
			<process ref="messageLogger" id="Log Foreign Movie" />
		</route>

		<route id="invalidXmlRoute">
			<from uri="jms:validateXmlDeadLetter" />
			<process ref="messageLogger" id="Log Invalid XML Row" />
		</route>

	</camelContext>


</beans>
